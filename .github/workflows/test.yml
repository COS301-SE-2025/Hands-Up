name: Test Code
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
    
permissions:
  contents: read

jobs:
  pre-start:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Starting Job
        run: |
          echo "Beginning to test ${{ github.repository }}"

  test-codebase:
    name: Test Codebase
    runs-on: ubuntu-latest
    needs: pre-start

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies for test
        working-directory: ./
        run: npm ci

      - name: Install dependencies for backend
        working-directory: backend/api
        run: npm ci

      - name: Install dependencies for frontend
        working-directory: frontend
        run: npm ci

      - name: Run Tests
        working-directory: ./
        run: npm run test-coverage
   
  test-integration:
    name: Run Cypress Integration Tests
    runs-on: ubuntu-latest
    needs: test-codebase

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Install docker-compose
      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Install root dependencies
        run: npm ci

      - name: Install backend dependencies
        working-directory: backend/api
        run: npm ci

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      # Install Cypress binary explicitly
      - name: Install Cypress
        run: npx cypress install

      # Create .env file with secrets
      - name: Create .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" > .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env

      # Start database and wait for it to be ready
      - name: Start database
        run: |
          cd backend/database
          docker-compose --env-file ../../.env up -d postgres
          echo "Waiting for PostgreSQL to be ready..."
          sleep 20
          
      # Run database migrations with explicit wait and connection test
      - name: Run database migrations
        run: |
          cd backend/database
          echo "Checking if database is ready..."
          docker-compose exec -T postgres pg_isready -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }}
          
          echo "Running Flyway migration..."
          docker-compose --env-file ../../.env run --rm flyway
      # Debug database connection
      - name: Debug database connection
        run: |
          cd backend/database
          echo "Checking docker-compose services..."
          docker-compose ps
          
          echo "Checking database logs..."
          docker-compose logs postgres
          
      - name: Start services and run Cypress tests
        run: npm run test:integration