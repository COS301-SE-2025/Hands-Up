name: Test Code
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
    
permissions:
  contents: read

jobs:
  pre-start:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Starting Job
        run: |
          echo "Beginning to test ${{ github.repository }}"

  test-codebase:
    name: Test Codebase
    runs-on: ubuntu-latest
    needs: pre-start

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies for test
        working-directory: ./
        run: npm ci

      - name: Install dependencies for backend
        working-directory: backend/api
        run: npm ci

      - name: Install dependencies for frontend
        working-directory: frontend
        run: npm ci

      - name: Run Tests
        working-directory: ./
        run: npm run test-coverage
   
  test-integration:
    name: Run Cypress Integration Tests
    runs-on: ubuntu-latest
    needs: test-codebase

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Install root dependencies
        run: npm ci

      - name: Install backend dependencies
        working-directory: backend/api
        run: npm ci

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Set CI environment variables
        run: |
          echo "CI=true" >> $GITHUB_ENV
          echo "HTTPS=false" >> $GITHUB_ENV
          echo "SSL_CRT_FILE=" >> $GITHUB_ENV
          echo "SSL_KEY_FILE=" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
          echo "DB_USER=postgres" >> $GITHUB_ENV
          echo "DB_PASS=password" >> $GITHUB_ENV
          echo "DB_NAME=handsup" >> $GITHUB_ENV

      - name: Wait for database to be ready
        run: |
          echo "Checking if database is accessible..."
          docker ps
          echo "Attempting to connect to database..."
          timeout 60 bash -c 'until docker exec HandsUp_DB pg_isready -h localhost -U postgres; do sleep 2; done' || echo "Database not ready via docker exec"
          echo "Checking if port 5432 is accessible from host..."
          nc -zv localhost 5432 || echo "Port 5432 not accessible from host"

      - name: Check backend entry point
        run: |
          echo "Checking for backend entry point..."
          ls -la backend/api/
          if [ ! -f "backend/api/handsUP.js" ] && [ ! -f "backend/api/handsUP" ]; then
            echo "handsUP entry point not found. Available files:"
            find backend/api -name "*.js" -type f
          fi

      - name: Start services and run Cypress tests
        run: npm run test:integration:ci