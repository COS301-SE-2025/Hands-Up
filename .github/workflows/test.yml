name: Test Code
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
    
permissions:
  contents: read

jobs:
  pre-start:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Starting Job
        run: |
          echo "Beginning to test ${{ github.repository }}"

  test-codebase:
    name: Test Codebase
    runs-on: ubuntu-latest
    needs: pre-start

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies for test
        working-directory: ./
        run: npm ci

      - name: Install dependencies for backend
        working-directory: backend/api
        run: npm ci

      - name: Install dependencies for frontend
        working-directory: frontend
        run: npm ci

      - name: Run Tests
        working-directory: ./
        run: npm run test-coverage
   
  test-integration:
    name: Run Cypress Integration Tests
    runs-on: ubuntu-latest
    needs: test-codebase

    services:
      # Add any additional services your database needs here
      # For example, if you're using PostgreSQL:
      # postgres:
      #   image: postgres:13
      #   env:
      #     POSTGRES_PASSWORD: postgres
      #     POSTGRES_DB: testdb
      #   options: >-
      #     --health-cmd pg_isready
      #     --health-interval 10s
      #     --health-timeout 5s
      #     --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Set up Docker Buildx (includes compose)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install root dependencies
        run: npm ci

      - name: Install backend dependencies
        working-directory: backend/api
        run: npm ci

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      # Install Cypress binary explicitly
      - name: Install Cypress
        run: npx cypress install

      - name: Start services and run Cypress tests
        run: npm run test:integration